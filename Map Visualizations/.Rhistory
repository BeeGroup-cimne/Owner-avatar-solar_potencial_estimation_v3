# Manually add a black "Intersection" entry to the legend
layerId = "plane_legend",
colors = c("white", palette(unique(polygons$plane[!grepl("Intersection", polygons$plane)]))),
labels = c("Intersection", unique(polygons$plane[!grepl("Intersection", polygons$plane)]))
)
map2
map2 <- leaflet(polygons, options = leafletOptions(maxZoom = 25)) %>%
addProviderTiles(providers$OpenStreetMap.Mapnik, options = providerTileOptions(opacity=1, maxZoom=20)) %>%
addPolygons(
fillColor = ~ ifelse(grepl("Intersection", plane), "white", palette(plane)),
opacity = 1,
stroke = TRUE,
color = "black",
fillOpacity = 1,           # Adjust the fill opacity for better visibility
weight = 0.5,                  # Set outline thickness
fillPattern = ~ifelse(grepl("Intersection", plane),
patternStripe(angle = 45, color = "black", weight = 5, space = 10),
NULL)
) %>%
addPolygons(data = cadaster_merged_sf,
weight = 4,
color =  "black",
opacity = 1,
label = ~paste(REFCAT, construction, CONSTRU, sep=". ")) %>%
addScaleBar() %>%
addLegend(
"bottomright",
values = ~plane,
title = "Plane",
opacity = 0.7,
labFormat = labelFormat(),
# Manually add a black "Intersection" entry to the legend
layerId = "plane_legend",
colors = c("white", palette(unique(polygons$plane[!grepl("Intersection", polygons$plane)]))),
labels = c("Intersection", unique(polygons$plane[!grepl("Intersection", polygons$plane)]))
)
map2
map2 <- leaflet(polygons, options = leafletOptions(maxZoom = 25)) %>%
addProviderTiles(providers$OpenStreetMap.Mapnik, options = providerTileOptions(opacity=1, maxZoom=20)) %>%
addPolygons(
fillColor = ~ ifelse(grepl("Intersection", plane), NA, palette(plane)),
opacity = 1,
stroke = TRUE,
color = "black",
fillOpacity = 1,           # Adjust the fill opacity for better visibility
weight = 0.5,                  # Set outline thickness
fillPattern = ~ifelse(grepl("Intersection", plane),
patternStripe(angle = 45, color = "black", weight = 5, space = 10),
NULL)
) %>%
addPolygons(data = cadaster_merged_sf,
weight = 4,
color =  "black",
opacity = 1,
label = ~paste(REFCAT, construction, CONSTRU, sep=". ")) %>%
addScaleBar() %>%
addLegend(
"bottomright",
values = ~plane,
title = "Plane",
opacity = 0.7,
labFormat = labelFormat(),
# Manually add a black "Intersection" entry to the legend
layerId = "plane_legend",
colors = c("white", palette(unique(polygons$plane[!grepl("Intersection", polygons$plane)]))),
labels = c("Intersection", unique(polygons$plane[!grepl("Intersection", polygons$plane)]))
)
map2
map2 <- leaflet(polygons, options = leafletOptions(maxZoom = 25)) %>%
addProviderTiles(providers$OpenStreetMap.Mapnik, options = providerTileOptions(opacity=1, maxZoom=20)) %>%
addPolygons(
fillColor = ~ ifelse(grepl("Intersection", plane), NA, palette(plane)),
opacity = 1,
stroke = TRUE,
color = "black",
fillOpacity = 1,           # Adjust the fill opacity for better visibility
weight = 0.5                 # Set outline thickness
) %>% addPattern(
data = polygons[grepl("Intersection", polygons$plane), ],  # Filter polygons with "Intersection"
pattern = patternStripe(angle = 45, color = "black", weight = 5, space = 10),  # Create striped pattern
fillOpacity = 1
) %>%
addPolygons(data = cadaster_merged_sf,
weight = 4,
color =  "black",
opacity = 1,
label = ~paste(REFCAT, construction, CONSTRU, sep=". ")) %>%
addScaleBar() %>%
addLegend(
"bottomright",
values = ~plane,
title = "Plane",
opacity = 0.7,
labFormat = labelFormat(),
# Manually add a black "Intersection" entry to the legend
layerId = "plane_legend",
colors = c("white", palette(unique(polygons$plane[!grepl("Intersection", polygons$plane)]))),
labels = c("Intersection", unique(polygons$plane[!grepl("Intersection", polygons$plane)]))
)
map2
library(leaflet.extras)
map2 <- leaflet(polygons, options = leafletOptions(maxZoom = 25)) %>%
addProviderTiles(providers$OpenStreetMap.Mapnik, options = providerTileOptions(opacity=1, maxZoom=20)) %>%
addPolygons(
fillColor = ~ ifelse(grepl("Intersection", plane), NA, palette(plane)),
opacity = 1,
stroke = TRUE,
color = "black",
fillOpacity = 1,           # Adjust the fill opacity for better visibility
weight = 0.5                 # Set outline thickness
) %>%
addPolygons(data = cadaster_merged_sf,
weight = 4,
color =  "black",
opacity = 1,
label = ~paste(REFCAT, construction, CONSTRU, sep=". ")) %>%
addScaleBar() %>%
addLegend(
"bottomright",
values = ~plane,
title = "Plane",
opacity = 0.7,
labFormat = labelFormat(),
# Manually add a black "Intersection" entry to the legend
layerId = "plane_legend",
colors = c("white", palette(unique(polygons$plane[!grepl("Intersection", polygons$plane)]))),
labels = c("Intersection", unique(polygons$plane[!grepl("Intersection", polygons$plane)]))
)
map2
map2 <- leaflet(polygons, options = leafletOptions(maxZoom = 25)) %>%
addProviderTiles(providers$OpenStreetMap.Mapnik, options = providerTileOptions(opacity=1, maxZoom=20)) %>%
addPolygons(
fillColor = ~ ifelse(grepl("Intersection", plane), "white", palette(plane)),
opacity = 1,
stroke = TRUE,
color = "black",
fillOpacity = 1,           # Adjust the fill opacity for better visibility
weight = 0.5                 # Set outline thickness
) %>%
addPolygons(data = cadaster_merged_sf,
weight = 4,
color =  "black",
opacity = 1,
label = ~paste(REFCAT, construction, CONSTRU, sep=". ")) %>%
addScaleBar() %>%
addLegend(
"bottomright",
values = ~plane,
title = "Plane",
opacity = 0.7,
labFormat = labelFormat(),
# Manually add a black "Intersection" entry to the legend
layerId = "plane_legend",
colors = c("white", palette(unique(polygons$plane[!grepl("Intersection", polygons$plane)]))),
labels = c("Intersection", unique(polygons$plane[!grepl("Intersection", polygons$plane)]))
)
map2
map2 <- leaflet(polygons, options = leafletOptions(maxZoom = 25)) %>%
addProviderTiles(providers$OpenStreetMap.Mapnik, options = providerTileOptions(opacity=1, maxZoom=20)) %>%
addPolygons(
fillColor = ~ ifelse(grepl("Intersection", plane), "white", palette(plane)),
opacity = 1,
stroke = TRUE,
color = "black",
fillOpacity = 1,           # Adjust the fill opacity for better visibility
weight = 0.5                 # Set outline thickness
) %>%
addPolygons(data = cadaster_merged_sf,
weight = 2,
color =  "black",
opacity = 1,
label = ~paste(REFCAT, construction, CONSTRU, sep=". ")) %>%
addScaleBar() %>%
addLegend(
"bottomright",
values = ~plane,
title = "Plane",
opacity = 0.7,
labFormat = labelFormat(),
# Manually add a black "Intersection" entry to the legend
layerId = "plane_legend",
colors = c("white", palette(unique(polygons$plane[!grepl("Intersection", polygons$plane)]))),
labels = c("Intersection", unique(polygons$plane[!grepl("Intersection", polygons$plane)]))
)
map2
source("~/Documents/Projectes/BEEGroup/solar_potencial_estimation_v3/Map Visualizations/ShowIdentifiedPlanes.R", echo=TRUE)
palette <- colorFactor(palette = "Viridis", domain = unique(polygons$plane[!grepl("Intersection", polygons$plane)]))
map2 <- leaflet(polygons, options = leafletOptions(maxZoom = 25)) %>%
addProviderTiles(providers$OpenStreetMap.Mapnik, options = providerTileOptions(opacity=1, maxZoom=20)) %>%
addPolygons(
fillColor = ~ ifelse(grepl("Intersection", plane), "white", palette(plane)),
opacity = 1,
stroke = TRUE,
color = "black",
fillOpacity = 1,           # Adjust the fill opacity for better visibility
weight = 0.5                 # Set outline thickness
) %>%
addPolygons(data = cadaster_merged_sf,
weight = 2,
color =  "black",
opacity = 1,
label = ~paste(REFCAT, construction, CONSTRU, sep=". ")) %>%
addScaleBar() %>%
addLegend(
"bottomright",
values = ~plane,
title = "Plane",
opacity = 0.7,
labFormat = labelFormat(),
# Manually add a black "Intersection" entry to the legend
layerId = "plane_legend",
colors = c("white", palette(unique(polygons$plane[!grepl("Intersection", polygons$plane)]))),
labels = c("Intersection", unique(polygons$plane[!grepl("Intersection", polygons$plane)]))
)
map2
palette
parcels <- parcels[1]
source("~/Documents/Projectes/BEEGroup/solar_potencial_estimation_v3/Map Visualizations/ShowIdentifiedPlanes.R", echo=TRUE)
for (parcel in parcels){
constructions <- list.dirs(path = paste(base_folder, neighborhood, "/Parcels/", parcel, sep=""), recursive = FALSE, full.names = FALSE)
gpkg_files <- paste0(base_folder, neighborhood, "/Parcels/", parcel, "/", constructions, "/Map files/", constructions, ".gpkg")
partial_cadaster_sf_list <- lapply(gpkg_files, function(file) {
re_sf <- read_sf(file)
re_sf <- st_zm(re_sf)
re_sf <- st_transform(re_sf, 4326)
re_sf$parcel <- parcel
re_sf$construction <- gsub(".gpkg", "", basename(file))
return(re_sf)
})
cadaster_sf_list <- c(cadaster_sf_list, partial_cadaster_sf_list)
for (construction in constructions){
planes <- list.files(path = paste0(base_folder, neighborhood, "/Parcels/", parcel, "/", construction, searchPath), recursive = FALSE, full.names = FALSE)
if(length(planes) > 0){
gpkg_files <- paste0(base_folder, neighborhood, "/Parcels/", parcel, "/", construction, searchPath, planes)
partial_planes_sf_list <- lapply(gpkg_files, function(file) {
re_sf <- read_sf(file)
re_sf <- st_zm(re_sf)
re_sf <- st_transform(re_sf, 4326)
re_sf$parcel <- parcel
re_sf$construction <- construction
re_sf$plane  <- gsub(".gpkg", "", basename(file))
return(re_sf)
})
planes_sf_list <- c(planes_sf_list, partial_planes_sf_list)
}
}
}
polygons <- expanded_sf_df %>% filter((st_geometry_type(.) == "MULTIPOLYGON") | (st_geometry_type(.) == "POLYGON"))
palette <- colorFactor(palette = "Viridis", domain = unique(polygons$plane[!grepl("Intersection", polygons$plane)]))
map2 <- leaflet(polygons, options = leafletOptions(maxZoom = 25)) %>%
addProviderTiles(providers$OpenStreetMap.Mapnik, options = providerTileOptions(opacity=1, maxZoom=20)) %>%
addPolygons(
fillColor = ~ ifelse(grepl("Intersection", plane), "white", palette(plane)),
opacity = 1,
stroke = TRUE,
color = "black",
fillOpacity = 1,           # Adjust the fill opacity for better visibility
weight = 0.5                 # Set outline thickness
) %>%
addPolygons(data = cadaster_merged_sf,
weight = 2,
color =  "black",
opacity = 1,
label = ~paste(REFCAT, construction, CONSTRU, sep=". ")) %>%
addScaleBar() %>%
addLegend(
"bottomright",
values = ~plane,
title = "Plane",
opacity = 0.7,
labFormat = labelFormat(),
# Manually add a black "Intersection" entry to the legend
layerId = "plane_legend",
colors = c("white", palette(unique(polygons$plane[!grepl("Intersection", polygons$plane)]))),
labels = c("Intersection", unique(polygons$plane[!grepl("Intersection", polygons$plane)]))
)
map2
palette <- colorFactor(palette = "Set3", domain = unique(polygons$plane[!grepl("Intersection", polygons$plane)]))
map2 <- leaflet(polygons, options = leafletOptions(maxZoom = 25)) %>%
addProviderTiles(providers$OpenStreetMap.Mapnik, options = providerTileOptions(opacity=1, maxZoom=20)) %>%
addPolygons(
fillColor = ~ ifelse(grepl("Intersection", plane), "white", palette(plane)),
opacity = 1,
stroke = TRUE,
color = "black",
fillOpacity = 1,           # Adjust the fill opacity for better visibility
weight = 0.5                 # Set outline thickness
) %>%
addPolygons(data = cadaster_merged_sf,
weight = 2,
color =  "black",
opacity = 1,
label = ~paste(REFCAT, construction, CONSTRU, sep=". ")) %>%
addScaleBar() %>%
addLegend(
"bottomright",
values = ~plane,
title = "Plane",
opacity = 0.7,
labFormat = labelFormat(),
# Manually add a black "Intersection" entry to the legend
layerId = "plane_legend",
colors = c("white", palette(unique(polygons$plane[!grepl("Intersection", polygons$plane)]))),
labels = c("Intersection", unique(polygons$plane[!grepl("Intersection", polygons$plane)]))
)
map2
source("~/Documents/Projectes/BEEGroup/solar_potencial_estimation_v3/Map Visualizations/ShowIdentifiedPlanes.R", echo=TRUE)
source("~/Documents/Projectes/BEEGroup/solar_potencial_estimation_v3/Map Visualizations/ShowIdentifiedPlanes.R", echo=TRUE)
source("~/Documents/Projectes/BEEGroup/solar_potencial_estimation_v3/Map Visualizations/ShowIdentifiedPlanes.R", echo=TRUE)
geometry_types
map2 <- leaflet(planes_merged_sf, options = leafletOptions(maxZoom = 25)) %>%
addProviderTiles(providers$OpenStreetMap.Mapnik, options = providerTileOptions(opacity=1, maxZoom=20)) %>%
addPolygons(
fillColor = ~ ifelse(grepl("Intersection", plane), "white", palette(plane)),
opacity = 1,
stroke = TRUE,
color = "black",
fillOpacity = 1,           # Adjust the fill opacity for better visibility
weight = 0.5                 # Set outline thickness
) %>%
addPolygons(data = cadaster_merged_sf,
weight = 2,
color =  "black",
opacity = 1,
label = ~paste(REFCAT, construction, CONSTRU, sep=". ")) %>%
addScaleBar() %>%
addLegend(
"bottomright",
values = ~plane,
title = "Plane",
opacity = 0.7,
labFormat = labelFormat(),
# Manually add a black "Intersection" entry to the legend
layerId = "plane_legend",
colors = c("white", palette(unique(polygons$plane[!grepl("Intersection", polygons$plane)]))),
labels = c("Intersection", unique(polygons$plane[!grepl("Intersection", polygons$plane)]))
)
map2
map2 <- leaflet(planes_merged_sf, options = leafletOptions(maxZoom = 25)) %>%
addProviderTiles(providers$OpenStreetMap.Mapnik, options = providerTileOptions(opacity=1, maxZoom=20)) %>%
addPolygons(
fillColor = ~ ifelse(grepl("Intersection", plane), "white", palette(plane)),
opacity = 1,
stroke = TRUE,
color = "black",
fillOpacity = 0.5,           # Adjust the fill opacity for better visibility
weight = 0.5                 # Set outline thickness
) %>%
addPolygons(data = cadaster_merged_sf,
weight = 2,
color =  "black",
opacity = 1,
label = ~paste(REFCAT, construction, CONSTRU, sep=". ")) %>%
addScaleBar() %>%
addLegend(
"bottomright",
values = ~plane,
title = "Plane",
opacity = 0.7,
labFormat = labelFormat(),
# Manually add a black "Intersection" entry to the legend
layerId = "plane_legend",
colors = c("white", palette(unique(polygons$plane[!grepl("Intersection", polygons$plane)]))),
labels = c("Intersection", unique(polygons$plane[!grepl("Intersection", polygons$plane)]))
)
map2
source("~/Documents/Projectes/BEEGroup/solar_potencial_estimation_v3/Map Visualizations/ShowIdentifiedPlanes.R", echo=TRUE)
map2 <- leaflet(planes_merged_sf, options = leafletOptions(maxZoom = 25)) %>%
addProviderTiles(providers$OpenStreetMap.Mapnik, options = providerTileOptions(opacity=1, maxZoom=20)) %>%
addPolygons(
fillColor = ~ ifelse(grepl("Intersection", plane), "white", palette(plane)),
opacity = 1,
stroke = TRUE,
color = "white",
fillOpacity = 0.5,           # Adjust the fill opacity for better visibility
weight = 2                 # Set outline thickness
) %>%
addPolygons(data = cadaster_merged_sf,
weight = 4,
color =  "black",
opacity = 1,
label = ~paste(REFCAT, construction, CONSTRU, sep=". ")) %>%
addScaleBar() %>%
addLegend(
"bottomright",
values = ~plane,
title = "Plane",
opacity = 0.7,
labFormat = labelFormat(),
# Manually add a black "Intersection" entry to the legend
layerId = "plane_legend",
colors = c("white", palette(unique(polygons$plane[!grepl("Intersection", polygons$plane)]))),
labels = c("Intersection", unique(polygons$plane[!grepl("Intersection", polygons$plane)]))
)
map2 <- leaflet(planes_merged_sf, options = leafletOptions(maxZoom = 25)) %>%
addProviderTiles(providers$OpenStreetMap.Mapnik, options = providerTileOptions(opacity=1, maxZoom=20)) %>%
addPolygons(
fillColor = ~ ifelse(grepl("Intersection", plane), "white", palette(plane)),
opacity = 1,
stroke = TRUE,
color = "white",
fillOpacity = 0.5,           # Adjust the fill opacity for better visibility
weight = 4                 # Set outline thickness
) %>%
addPolygons(data = cadaster_merged_sf,
weight = 2,
color =  "black",
opacity = 1,
label = ~paste(REFCAT, construction, CONSTRU, sep=". ")) %>%
addScaleBar() %>%
addLegend(
"bottomright",
values = ~plane,
title = "Plane",
opacity = 0.7,
labFormat = labelFormat(),
# Manually add a black "Intersection" entry to the legend
layerId = "plane_legend",
colors = c("white", palette(unique(polygons$plane[!grepl("Intersection", polygons$plane)]))),
labels = c("Intersection", unique(polygons$plane[!grepl("Intersection", polygons$plane)]))
)
map2
map2 <- leaflet(planes_merged_sf, options = leafletOptions(maxZoom = 25)) %>%
addProviderTiles(providers$OpenStreetMap.Mapnik, options = providerTileOptions(opacity=1, maxZoom=20)) %>%
addPolygons(
fillColor = ~ ifelse(grepl("Intersection", plane), "white", palette(plane)),
opacity = 1,
stroke = TRUE,
color = "white",
fillOpacity = 0.5,           # Adjust the fill opacity for better visibility
weight = 1                 # Set outline thickness
) %>%
addPolygons(data = cadaster_merged_sf,
weight = 2,
color =  "black",
opacity = 1,
label = ~paste(REFCAT, construction, CONSTRU, sep=". ")) %>%
addScaleBar() %>%
addLegend(
"bottomright",
values = ~plane,
title = "Plane",
opacity = 0.7,
labFormat = labelFormat(),
# Manually add a black "Intersection" entry to the legend
layerId = "plane_legend",
colors = c("white", palette(unique(polygons$plane[!grepl("Intersection", polygons$plane)]))),
labels = c("Intersection", unique(polygons$plane[!grepl("Intersection", polygons$plane)]))
)
map2
map2 <- leaflet(planes_merged_sf, options = leafletOptions(maxZoom = 25)) %>%
addProviderTiles(providers$OpenStreetMap.Mapnik, options = providerTileOptions(opacity=1, maxZoom=20)) %>%
addPolygons(
fillColor = ~ ifelse(grepl("Intersection", plane), "white", palette(plane)),
opacity = 1,
stroke = TRUE,
color = "black",
fillOpacity = 0.5,           # Adjust the fill opacity for better visibility
weight = 1                 # Set outline thickness
) %>%
addPolygons(data = cadaster_merged_sf,
weight = 2,
color =  "black",
opacity = 1,
label = ~paste(REFCAT, construction, CONSTRU, sep=". ")) %>%
addScaleBar() %>%
addLegend(
"bottomright",
values = ~plane,
title = "Plane",
opacity = 0.7,
labFormat = labelFormat(),
# Manually add a black "Intersection" entry to the legend
layerId = "plane_legend",
colors = c("white", palette(unique(polygons$plane[!grepl("Intersection", polygons$plane)]))),
labels = c("Intersection", unique(polygons$plane[!grepl("Intersection", polygons$plane)]))
)
map2
map2 <- leaflet(planes_merged_sf, options = leafletOptions(maxZoom = 25)) %>%
addProviderTiles(providers$OpenStreetMap.Mapnik, options = providerTileOptions(opacity=1, maxZoom=20)) %>%
addPolygons(
fillColor = ~ ifelse(grepl("Intersection", plane), "white", palette(plane)),
opacity = 1,
stroke = TRUE,
color = "black",
fillOpacity = 0.5,           # Adjust the fill opacity for better visibility
weight = 1                 # Set outline thickness
) %>%
addPolygons(data = cadaster_merged_sf,
weight = 2,
color =  "black",
opacity = 1,
label = ~paste(REFCAT, construction, CONSTRU, sep=". ")) %>%
addScaleBar() %>%
map2
map2 <- leaflet(planes_merged_sf, options = leafletOptions(maxZoom = 25)) %>%
addProviderTiles(providers$OpenStreetMap.Mapnik, options = providerTileOptions(opacity=1, maxZoom=20)) %>%
addPolygons(
fillColor = ~ ifelse(grepl("Intersection", plane), "white", palette(plane)),
opacity = 1,
stroke = TRUE,
color = "black",
fillOpacity = 0.5,           # Adjust the fill opacity for better visibility
weight = 1                 # Set outline thickness
) %>%
addPolygons(data = cadaster_merged_sf,
weight = 2,
color =  "black",
opacity = 1,
label = ~paste(REFCAT, construction, CONSTRU, sep=". ")) %>%
addScaleBar()
map2
